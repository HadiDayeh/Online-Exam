-- MySQL Script generated by MySQL Workbench
-- Wed May 27 17:26:33 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema online_exam
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `online_exam` ;

-- -----------------------------------------------------
-- Schema online_exam
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `online_exam` DEFAULT CHARACTER SET utf8 ;
USE `online_exam` ;

-- -----------------------------------------------------
-- Table `online_exam`.`answers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `online_exam`.`answers` ;

CREATE TABLE IF NOT EXISTS `online_exam`.`answers` (
  `id_student` INT UNSIGNED NOT NULL,
  `id_question` INT UNSIGNED NOT NULL,
  `id_option` INT UNSIGNED NULL,
  PRIMARY KEY (`id_student`, `id_question`),
  INDEX `id_answer_student_idx` (`id_student` ASC) VISIBLE,
  INDEX `id_answer_question_idx` (`id_question` ASC) VISIBLE,
  INDEX `id_answer_option_idx` (`id_option` ASC) VISIBLE,
  CONSTRAINT `id_answer_student`
    FOREIGN KEY (`id_student`)
    REFERENCES `online_exam`.`students` (`id_student`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_answer_question`
    FOREIGN KEY (`id_question`)
    REFERENCES `online_exam`.`questions` (`id_question`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_answer_option`
    FOREIGN KEY (`id_option`)
    REFERENCES `online_exam`.`options` (`id_option`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `online_exam`.`classes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `online_exam`.`classes` ;

CREATE TABLE IF NOT EXISTS `online_exam`.`classes` (
  `id_class` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `id_instructor` INT UNSIGNED NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_class`),
  INDEX `id_class_instructor_idx` (`id_instructor` ASC) VISIBLE,
  CONSTRAINT `id_class_instructor`
    FOREIGN KEY (`id_instructor`)
    REFERENCES `online_exam`.`instructors` (`id_instructor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `online_exam`.`exams`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `online_exam`.`exams` ;

CREATE TABLE IF NOT EXISTS `online_exam`.`exams` (
  `id_exam` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `id_class` INT UNSIGNED NOT NULL,
  `id_status` INT UNSIGNED NOT NULL DEFAULT 1,
  `title` VARCHAR(100) NOT NULL,
  `description` VARCHAR(1000) NULL,
  `questions` INT UNSIGNED NOT NULL,
  `duration` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_exam`),
  INDEX `id_exam_class_idx` (`id_class` ASC) VISIBLE,
  INDEX `id_status_idx` (`id_status` ASC) VISIBLE,
  CONSTRAINT `id_exam_class`
    FOREIGN KEY (`id_class`)
    REFERENCES `online_exam`.`classes` (`id_class`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_status`
    FOREIGN KEY (`id_status`)
    REFERENCES `online_exam`.`statuses` (`id_status`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `online_exam`.`instructors`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `online_exam`.`instructors` ;

CREATE TABLE IF NOT EXISTS `online_exam`.`instructors` (
  `id_instructor` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(50) NOT NULL,
  `last_name` VARCHAR(50) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_instructor`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `online_exam`.`options`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `online_exam`.`options` ;

CREATE TABLE IF NOT EXISTS `online_exam`.`options` (
  `id_option` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `id_question` INT UNSIGNED NOT NULL,
  `option` VARCHAR(100) NOT NULL,
  `is_true` TINYINT NOT NULL,
  PRIMARY KEY (`id_option`),
  INDEX `id_option_question_idx` (`id_question` ASC) VISIBLE,
  CONSTRAINT `id_option_question`
    FOREIGN KEY (`id_question`)
    REFERENCES `online_exam`.`questions` (`id_question`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `online_exam`.`questions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `online_exam`.`questions` ;

CREATE TABLE IF NOT EXISTS `online_exam`.`questions` (
  `id_question` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `id_exam` INT UNSIGNED NOT NULL,
  `question` VARCHAR(500) NOT NULL,
  PRIMARY KEY (`id_question`),
  INDEX `id_question_exam_idx` (`id_exam` ASC) VISIBLE,
  CONSTRAINT `id_question_exam`
    FOREIGN KEY (`id_exam`)
    REFERENCES `online_exam`.`exams` (`id_exam`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `online_exam`.`statuses`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `online_exam`.`statuses` ;

CREATE TABLE IF NOT EXISTS `online_exam`.`statuses` (
  `id_status` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `status` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_status`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `online_exam`.`students`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `online_exam`.`students` ;

CREATE TABLE IF NOT EXISTS `online_exam`.`students` (
  `id_student` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(50) NOT NULL,
  `last_name` VARCHAR(50) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_student`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `online_exam`.`students_classes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `online_exam`.`students_classes` ;

CREATE TABLE IF NOT EXISTS `online_exam`.`students_classes` (
  `id_class` INT UNSIGNED NOT NULL,
  `id_student` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_student`, `id_class`),
  INDEX `id_student_class_idx` (`id_class` ASC) VISIBLE,
  INDEX `id_class_student_idx` (`id_student` ASC) VISIBLE,
  CONSTRAINT `id_student_class`
    FOREIGN KEY (`id_class`)
    REFERENCES `online_exam`.`classes` (`id_class`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_class_student`
    FOREIGN KEY (`id_student`)
    REFERENCES `online_exam`.`students` (`id_student`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `online_exam`.`students_exams`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `online_exam`.`students_exams` ;

CREATE TABLE IF NOT EXISTS `online_exam`.`students_exams` (
  `id_student` INT UNSIGNED NOT NULL,
  `id_exam` INT UNSIGNED NOT NULL,
  `right_answers` INT NOT NULL,
  `date_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id_student`, `id_exam`),
  INDEX `id_exam_student_idx` (`id_student` ASC) INVISIBLE,
  INDEX `id_student_exam_idx` (`id_exam` ASC) VISIBLE,
  CONSTRAINT `id_exam_student`
    FOREIGN KEY (`id_student`)
    REFERENCES `online_exam`.`students` (`id_student`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_student_exam`
    FOREIGN KEY (`id_exam`)
    REFERENCES `online_exam`.`exams` (`id_exam`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `online_exam` ;

-- -----------------------------------------------------
-- Placeholder table for view `online_exam`.`total_exams`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `online_exam`.`total_exams` (`id_instructor` INT, `id_class` INT, `class` INT, `total_exams` INT);

-- -----------------------------------------------------
-- Placeholder table for view `online_exam`.`total_students`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `online_exam`.`total_students` (`id_instructor` INT, `id_class` INT, `class` INT, `total_students` INT);

-- -----------------------------------------------------
-- View `online_exam`.`total_exams`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `online_exam`.`total_exams`;
DROP VIEW IF EXISTS `online_exam`.`total_exams` ;
USE `online_exam`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `total_exams` AS
    SELECT 
        `instructors`.`id_instructor` AS `id_instructor`,
        `classes`.`id_class` AS `id_class`,
        `classes`.`name` AS `class`,
        COUNT(`exams`.`id_exam`) AS `total_exams`
    FROM
        (`instructors`
        JOIN (`classes`
        LEFT JOIN `exams` ON ((`classes`.`id_class` = `exams`.`id_class`))))
    WHERE
        (`classes`.`id_instructor` = `instructors`.`id_instructor`)
    GROUP BY `classes`.`id_class`;

-- -----------------------------------------------------
-- View `online_exam`.`total_students`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `online_exam`.`total_students`;
DROP VIEW IF EXISTS `online_exam`.`total_students` ;
USE `online_exam`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `total_students` AS
    SELECT 
        `instructors`.`id_instructor` AS `id_instructor`,
        `classes`.`id_class` AS `id_class`,
        `classes`.`name` AS `class`,
        COUNT(`students_classes`.`id_student`) AS `total_students`
    FROM
        (`instructors`
        JOIN (`classes`
        LEFT JOIN `students_classes` ON ((`classes`.`id_class` = `students_classes`.`id_class`))))
    WHERE
        (`classes`.`id_instructor` = `instructors`.`id_instructor`)
    GROUP BY `classes`.`id_class`;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
